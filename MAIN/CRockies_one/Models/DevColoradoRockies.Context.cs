//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRockies_one.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DevColoradoRockiesEntities : DbContext
    {
        public DevColoradoRockiesEntities()
            : base("name=DevColoradoRockiesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<PitcherProfile_CurrentAndSplits> PitcherProfile_CurrentAndSplits { get; set; }
        public DbSet<Pitcher> Pitchers { get; set; }
        public DbSet<UserEntered> UserEntereds { get; set; }
        public DbSet<UserEntered2> UserEntered2 { get; set; }
        public DbSet<PitcherSplit> PitcherSplits { get; set; }
        public DbSet<Outfielder_Pitcher> Outfielder_Pitcher { get; set; }
        public DbSet<HitterProfile> HitterProfiles { get; set; }
        public DbSet<HitterProfile_UserEntered> HitterProfile_UserEntered { get; set; }
        public DbSet<DugoutPitcher> DugoutPitchers { get; set; }
        public DbSet<PitcherProfile_PitchCountLastStart> PitcherProfile_PitchCountLastStart { get; set; }
    
        public virtual ObjectResult<cr_sproc_pitcherprofile_currentoverallstats_Result> cr_sproc_pitcherprofile_currentoverallstats(Nullable<long> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cr_sproc_pitcherprofile_currentoverallstats_Result>("cr_sproc_pitcherprofile_currentoverallstats", pIDParameter);
        }
    
        public virtual ObjectResult<cr_sproc_pitcherprofile_currentstatsvslhh_Result> cr_sproc_pitcherprofile_currentstatsvslhh(Nullable<long> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cr_sproc_pitcherprofile_currentstatsvslhh_Result>("cr_sproc_pitcherprofile_currentstatsvslhh", pIDParameter);
        }
    
        public virtual ObjectResult<cr_sproc_pitcherprofile_currentstatsvsrhh_Result> cr_sproc_pitcherprofile_currentstatsvsrhh(Nullable<long> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cr_sproc_pitcherprofile_currentstatsvsrhh_Result>("cr_sproc_pitcherprofile_currentstatsvsrhh", pIDParameter);
        }
    
        public virtual ObjectResult<cr_sproc_pitchersplits_Result> cr_sproc_pitchersplits(Nullable<int> year, Nullable<int> teamId, Nullable<int> active)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cr_sproc_pitchersplits_Result>("cr_sproc_pitchersplits", yearParameter, teamIdParameter, activeParameter);
        }
    
        public virtual ObjectResult<cr_sproc_runnerchart_Result> cr_sproc_runnerchart(Nullable<int> year, Nullable<int> teamId, Nullable<int> active)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cr_sproc_runnerchart_Result>("cr_sproc_runnerchart", yearParameter, teamIdParameter, activeParameter);
        }
    
        public virtual ObjectResult<cr_sproc_outfielderpitcher_agg_Result> cr_sproc_outfielderpitcher_agg(Nullable<int> year, Nullable<int> teamId, Nullable<int> active)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cr_sproc_outfielderpitcher_agg_Result>("cr_sproc_outfielderpitcher_agg", yearParameter, teamIdParameter, activeParameter);
        }
    
        public virtual ObjectResult<cr_sproc_outfielderpitcher_sta_Result> cr_sproc_outfielderpitcher_sta(Nullable<int> year, Nullable<int> teamId, Nullable<int> active)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cr_sproc_outfielderpitcher_sta_Result>("cr_sproc_outfielderpitcher_sta", yearParameter, teamIdParameter, activeParameter);
        }
    
        public virtual ObjectResult<cr_sproc_NEF_Hitter_Result> cr_sproc_NEF_Hitter(Nullable<int> year, Nullable<int> teamId, Nullable<int> active)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cr_sproc_NEF_Hitter_Result>("cr_sproc_NEF_Hitter", yearParameter, teamIdParameter, activeParameter);
        }
    
        public virtual ObjectResult<cr_sproc_NEF_Pitcher_Result> cr_sproc_NEF_Pitcher(Nullable<int> year, Nullable<int> teamId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cr_sproc_NEF_Pitcher_Result>("cr_sproc_NEF_Pitcher", yearParameter, teamIdParameter);
        }
    }
}
